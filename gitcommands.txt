git status
git add FileName FileName
git commit -m 'what is it about'

git reset --hard HEAD^^^ file
git reset --hard ididididid

git log
git log --pretty=oneline
git log --graph --pretty=oneline --abbrev-commit
查看分支变化情况

#1#	git reset HEAD FileName
#2#	git checkout -- FineName
丢弃修改：如果存入了stage暂存区，1+2，如果还没add，2

git rm FileName

cd ~
ssh-keygen -t rsa -C 'kirkgang@qq.com'
cd .ssh
cat id_rsa.pub
创建ssh密钥，id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，
id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。

要关联一个远程库，使用命令
git remote add origin git@server-name:path/repo-name.git

关联后，使用命令
git push -u origin master第一次推送master分支的所有内容

此后，每次本地提交后，只要有必要，就可以使用命令
git push origin master推送最新修改
git clone git@server-name:path/repo-name.git


#####分支######
git checkout -b dev

git branch dev
git checkout dev

以上第一条等价于第二三条命令，创建并切换至分支

git branch	查看分支
git merge dev	合并分支到master
git merge --no-ff -m 'merge with no fast-forward mode' dev
git branch -d dev	删除分支dev

查看远程分支：git remote -v

当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug
修复后，再git stash pop，回到工作现场。

本地创建与远程分支对应的分支：
git checkout -b branch-name origin/branch-name

git push origin banch-name
如果冲突，git pull之后合并解决冲突先
如果pull不了，说明本地分支和远程分支的链接关系没有创建，
git branch --set-upstream branch-name origin/branch-name

打标签：git tag v1.0
也可以给之前的版本打标签：git tag v1.0 commit-id
查看已有标签：git tag
查看标签信息：git show <tag-name>
删除标签：git tag -d <tag-name>
